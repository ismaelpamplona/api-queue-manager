services:
  rabbitmq:
    image: rabbitmq:3-management
    container_name: rabbitmq
    ports:
      - "5672:5672" # AMQP port
      - "15672:15672" # Management UI
    environment:
      RABBITMQ_DEFAULT_USER: guest
      RABBITMQ_DEFAULT_PASS: guest
    volumes:
      - rabbitmq_data:/var/lib/rabbitmq
    healthcheck:
      test: ["CMD", "rabbitmqctl", "status"]
      interval: 5s
      timeout: 5s
      retries: 3

  producer:
    build:
      context: .
      dockerfile: producer/Dockerfile
    container_name: producer
    ports:
      - "3000:3000"
    volumes:
      - .:/usr/src/app
    depends_on:
      rabbitmq:
        condition: service_healthy
    environment:
      RABBITMQ_ADDR: amqp://guest:guest@rabbitmq:5672
    healthcheck:
      test: ["CMD-SHELL", "curl -f http://localhost:3000 || exit 1"]
      interval: 5s
      timeout: 5s
      retries: 3

  consumer:
    build:
      context: .
      dockerfile: consumer/Dockerfile
    container_name: consumer
    depends_on:
      rabbitmq:
        condition: service_healthy
      producer:
        condition: service_healthy
    environment:
      RABBITMQ_ADDR: amqp://guest:guest@rabbitmq:5672
    volumes:
      - .:/usr/src/app

  api-simulation:
    build:
      context: ./api-simulation
      dockerfile: Dockerfile
    container_name: api-simulation
    ports:
      - "8080:8080" # Expose port 8080 for the Go API
    volumes:
      - ./api-simulation:/app # Mount local code directory to /app inside the container
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:8080"]
      interval: 10s
      timeout: 5s
      retries: 3

volumes:
  rabbitmq_data:
